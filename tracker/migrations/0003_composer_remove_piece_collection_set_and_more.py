# Generated by Django 5.2.4 on 2025-08-11 18:44

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('tracker', '0002_goal_additional_info_piece_collection_set_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Composer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('names', models.CharField(blank=True, default='', max_length=49)),
                ('surname', models.CharField(blank=True, default='', max_length=30)),
                ('display_name', models.CharField(blank=True, default='', max_length=80)),
            ],
        ),
        migrations.RemoveField(
            model_name='piece',
            name='collection_set',
        ),
        migrations.RemoveField(
            model_name='piece',
            name='composer',
        ),
        migrations.RemoveField(
            model_name='piece',
            name='genre',
        ),
        migrations.RemoveField(
            model_name='piece',
            name='goal',
        ),
        migrations.RemoveField(
            model_name='piece',
            name='number',
        ),
        migrations.RemoveField(
            model_name='piece',
            name='opus',
        ),
        migrations.RemoveField(
            model_name='piece',
            name='period',
        ),
        migrations.RemoveField(
            model_name='piece',
            name='pitch',
        ),
        migrations.RemoveField(
            model_name='piece',
            name='time_to_master',
        ),
        migrations.RemoveField(
            model_name='piece',
            name='type',
        ),
        migrations.AddField(
            model_name='piece',
            name='goals',
            field=models.ManyToManyField(blank=True, related_name='pieces', to='tracker.goal'),
        ),
        migrations.AlterField(
            model_name='goal',
            name='additional_info',
            field=models.TextField(blank=True, default=''),
        ),
        migrations.AlterField(
            model_name='goal',
            name='name',
            field=models.CharField(blank=True, default='', max_length=200),
        ),
        migrations.AlterField(
            model_name='piece',
            name='color',
            field=models.CharField(blank=True, default='', max_length=60),
        ),
        migrations.AlterField(
            model_name='piece',
            name='name',
            field=models.CharField(blank=True, default='', max_length=200),
        ),
        migrations.AlterField(
            model_name='piece',
            name='name_to_display',
            field=models.CharField(blank=True, default='', max_length=200),
        ),
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('opus', models.CharField(max_length=10)),
                ('pieces', models.ManyToManyField(blank=True, related_name='collections', to='tracker.piece')),
                ('composer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tracker.composer')),
            ],
        ),
        migrations.AddField(
            model_name='piece',
            name='composers',
            field=models.ManyToManyField(blank=True, related_name='pieces', to='tracker.composer'),
        ),
        migrations.CreateModel(
            name='Part',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default='', max_length=80)),
                ('number_of_main_parts', models.IntegerField(blank=True, null=True)),
                ('order_number', models.IntegerField(blank=True, null=True)),
                ('master_part', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='inside_parts', to='tracker.part')),
                ('piece', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tracker.piece')),
            ],
        ),
        migrations.CreateModel(
            name='PieceInformation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('opus', models.CharField(blank=True, default='', max_length=30)),
                ('number', models.CharField(blank=True, default='', max_length=30)),
                ('pitch', models.CharField(blank=True, default='', max_length=30)),
                ('type', models.CharField(blank=True, default='', max_length=70)),
                ('time_to_master', models.DurationField(blank=True, help_text='Sugerowany czas opanowania utworu', null=True)),
                ('piece', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='tracker.piece')),
            ],
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('genre', models.CharField(default='', max_length=50)),
                ('pieces', models.ManyToManyField(blank=True, related_name='genres', to='tracker.pieceinformation')),
            ],
        ),
        migrations.CreateModel(
            name='Style',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('style', models.CharField(default='', max_length=30)),
                ('pieces', models.ManyToManyField(blank=True, related_name='styles', to='tracker.pieceinformation')),
            ],
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('element', models.CharField(blank=True, default='', max_length=80)),
                ('method', models.CharField(blank=True, default='', max_length=100)),
                ('is_suggested', models.BooleanField(default=False)),
                ('goal', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tracker.goal')),
                ('parts', models.ManyToManyField(blank=True, related_name='tasks', to='tracker.part')),
                ('piece', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='tracker.piece')),
            ],
        ),
        migrations.CreateModel(
            name='Practice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('time', models.DurationField(blank=True, null=True)),
                ('start_time', models.TimeField(blank=True, null=True)),
                ('end_time', models.TimeField(blank=True, null=True)),
                ('repetitions', models.DecimalField(blank=True, decimal_places=1, max_digits=3, null=True)),
                ('is_completed', models.BooleanField(null=True)),
                ('completion_percentage', models.IntegerField(blank=True, null=True)),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tracker.task')),
            ],
        ),
        migrations.CreateModel(
            name='Challenge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('minimum_number_of_days', models.IntegerField()),
                ('is_completed', models.BooleanField(null=True)),
                ('tasks', models.ManyToManyField(related_name='challenges', to='tracker.task')),
            ],
        ),
        migrations.CreateModel(
            name='Type',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=50)),
                ('pieces', models.ManyToManyField(blank=True, related_name='types', to='tracker.pieceinformation')),
            ],
        ),
    ]
